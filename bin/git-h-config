#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2023 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 ...
#h:
#h: Configure the Git environment to my needs.
#h:
#h: ... g-gitignore  : Configure global `~/.gitignore`.
#h: ... g-gitmessage : Configure ~/.gitmessage.txt template.
#h: ... g-gitconfig  : Set text editor, filemode, etc.
##:
. hmain
. hlog
. vrun
. hfile
git_h_config() {
    local cmd="$1"
    shift
    case "$cmd" in
        g-gitignore)
            hlog info "Creating ~/.gitignore"
            hfile fadd ~/.gitignore "devc-git" <<-EOF
		.personal.sh
		EOF
            vrun git config --global --replace-all core.excludesfile ~/.gitignore
            ;;
        g-gitmessage)
            hlog info "Creating ~/.gitmessage.txt"
            hfile create ~/.gitmessage.txt <<-EOF
		feat|fix|docs|style|refactor|test|chore:
		
		50 word short description
		
		changelist
		EOF
            vrun git config --global --replace-all commit.template ~/.gitmessage.txt
            ;;
        g-gitconfig)
            vrun git config --global --replace-all http.sslVerify    false
            editor="`which "mg" "nano" "vi" 2>&1 | head -n 1 || true`"
            if test -n "${editor}"; then
                vrun git config --global --replace-all core.editor "${editor}"
            fi
            vrun git config --global --replace-all credential.helper store
            vrun git config --global --replace-all core.fileMode     false
            ;;
        *)
            hlog fatal "Invalid argument: $cmd"
            ;;
    esac
}
## -------------------------------------------------------------------
hmain -f "git-h-config" git_h_config "$@"
